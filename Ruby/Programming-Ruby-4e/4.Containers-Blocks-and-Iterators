
# Ruby comes with two built-in classes to handle collections:
  arrays and hashes
  - Ruby also has a block syntax that lets you encapsulate chunks of code.
    When paired with collections,these blocks become powerful iterator constructs.

Arrays
------
 - The class Array holds a collection of object references.
 - identified by a non-negative integer index


a = [ 3.14159,"pie", 99 ]
a.class # Array
a.length # 3

b = Array.new
b.class # => Array
b.length # 0

 - Arrays are indexed using the [ ] operator.
 - this is actually a method (an instance method of class Array)
    and hence can be overridden in subclasses
 - Index an array with a non-negative integer,and it returns the object at that position or returns nil if nothing is there.
 - Index an array with a negative integer, and it counts from the end.
 a = [ 1, 3, 5, 7, 9 ]
 a[-1] # => 9
 a[-99] # => nil
 - index arrays with a pair of numbers, [start,count].
 a[1..3] # [3,5,7]
 a[1...3] # [3,5]
 a[-3..-1] # [5,7,9]

 #Arrays have a large number of other useful methods. Using them, you can treat arrays as
 stacks, sets, queues, dequeues, and FIFO queues.

 Hashes
----------
